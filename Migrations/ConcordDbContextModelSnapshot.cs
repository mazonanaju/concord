// <auto-generated />
using System;
using Concord.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace concord.Migrations
{
    [DbContext(typeof(ConcordDbContext))]
    partial class ConcordDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Concord.Entities.Member", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("ProfileId");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoomId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Concord.Entities.Permition", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Permitions");
                });

            modelBuilder.Entity("Concord.Entities.Profile", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Concord.Entities.Role", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoomId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Concord.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CreatorId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("PermitionRole", b =>
                {
                    b.Property<Guid>("PermitionsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolesID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PermitionsID", "RolesID");

                    b.HasIndex("RolesID");

                    b.ToTable("PermitionRole");
                });

            modelBuilder.Entity("Concord.Entities.Member", b =>
                {
                    b.HasOne("Concord.Entities.Profile", "Profile")
                        .WithMany("Members")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Concord.Entities.Role", "Role")
                        .WithMany("Members")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Concord.Entities.Room", "Room")
                        .WithMany("Members")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Profile");

                    b.Navigation("Role");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Concord.Entities.Role", b =>
                {
                    b.HasOne("Concord.Entities.Room", "Room")
                        .WithMany("Roles")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Concord.Entities.Room", b =>
                {
                    b.HasOne("Concord.Entities.Profile", "Creator")
                        .WithMany("CreatedRooms")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("PermitionRole", b =>
                {
                    b.HasOne("Concord.Entities.Permition", null)
                        .WithMany()
                        .HasForeignKey("PermitionsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Concord.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Concord.Entities.Profile", b =>
                {
                    b.Navigation("CreatedRooms");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Concord.Entities.Role", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Concord.Entities.Room", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
